  <span style="display: none;" id='markerData'> <%= @markerData %></span>

<section class="trip-title">
  <header>
    <h1><%= @trip.name %></h1>
    <%= link_to "+trip", new_trip_path(@trip), :class => "btn btn-info btn-map" %>
    <a class = "btn btn-primary btn-map show_hide_place"> +place</a>
  </header>
    <a class = "btn btn-primary btn-map lines" id="add-lines">add lines</a>
    <a class = "btn btn-alert btn-map" id="remove-lines">remove lines</a>
</section>

<%= render :template => "trips/new" %>
<%= render :template => "places/new" %>

<script type="text/javascript">

$(document).ready(function(){
    $(".place-bar").hide();
    $(".trip-bar").hide();
    $("#remove-lines").hide();
    $("#add-lines").show();
    $(".show_hide_trip").show();
    $(".show_hide_place").show();
    $('.show_hide_place').click(function(){
      $(".place-bar").slideToggle();
      });
    $('.show_hide_trip').click(function(){
      $(".trip-bar").slideToggle();
      });
    $('#add-lines').click(function(){
      $("#add-lines").toggle();
      $("#remove-lines").toggle();
      })
    $('#remove-lines').click(function(){
      $("#add-lines").toggle();
      $("#remove-lines").toggle();
      });;
  });
</script>


<script type='text/javascript'>
var polyLines = [];

 $('#remove-lines').click(function(){
    for (var i = polyLines.length - 1; i >= 0; i--) {
      polyLines[i].setMap(null);
        };
  });


 $('#add-lines').click(function(){
    addLinesToMap(window.map);
  });

   addLinesToMap = function(map) {
    var lineCoordinates = [];
    var startPoints = [];
    var connectedPoints = [];
    var group=[];

    for (var i = markerData.length - 1; i >= 0; i--) {
      var place = markerData[i];
        if(place.previous_place_id == null)
          startPoints.push(place);
        else
          connectedPoints.push(place);
      var placeLatLong = new google.maps.LatLng(place.latitude, place.longitude);
      lineCoordinates.push(placeLatLong);
    };
    console.log(connectedPoints)
    console.log(startPoints)


    for (var i = (startPoints.length - 1); i >= 0; i--) {
        var arrayConnectedPlaces =[];
        var place = startPoints[i];
        console.log(place);

        arrayConnectedPlaces.push(new google.maps.LatLng(place.latitude, place.longitude));

          if (place.next_place_id !== null)
            {
              for (var j = connectedPoints.length-1; j >= 0; j--) {
                currentPlace = connectedPoints[j];
                if(currentPlace.placeId == place.next_place_id)
                  {
                  arrayConnectedPlaces.push(new google.maps.LatLng(currentPlace.latitude, currentPlace.longitude));
                  place = currentPlace;
                  console.log(currentPlace);
                  };
              };
            };

        group.push(arrayConnectedPlaces.slice(0));
    };


  lineCoordinates.push(placeLatLong);

      var lineSymbol = {
      path: 'M 0,-1 0,1',
      strokeOpacity: 1,
      scale: 4
      };

      var lineSymbol = {
        path: google.maps.SymbolPath.FORWARD_CLOSED_ARROW
      };

    polyLines = []
    var color = "#0027F0"
    for (var i = group.length - 1; i >= 0; i--) {
      var line = new google.maps.Polyline({
      path: group[i],
      strokeColor: color,
      strokeOpacity: 1.0,
      strokeWeight: 1.5,
      icons: [{
          icon: lineSymbol,
          repeat: '150px',
          offset: '100%',
        }],
      });
      switch (color) {
        case "#0027F0":
               color = "#009938";
               break;
        case "#009938":
               color = "#FF0000";
               break;
        case "#FF0000":
               color = "#000000";
               break;
        case "#000000":
               color = "#0027F0";
               break;
        };
      line.setMap(window.map);
      polyLines.push(line);
    };

    };

function initialize() {
    window.map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
    addPlacesToMap(window.map);
    calculateMapZoomLevel(window.map);
  };

  var markerData = <%=raw @markerData %>;

  window.markersOnMap = [];
  var mapOptions = {
    zoom: 10,
    mapTypeId: google.maps.MapTypeId.TERRAIN
  };

  addMarker = function(map, latLong, place) {
    var marker = new google.maps.Marker({
        position: latLong,
        map: map,
        title: place.name,
        url: "../trips/"+place.tripId+"/places/"+place.placeId
      });
    markersOnMap.push(name);
    google.maps.event.addListener(marker, 'click', function(){
      window.location.href = this.url;
    });
    return marker;

  };

  latLangList = function() {
    var LatLngList = new Array
    //  Create a new viewpoint bound
    for (var i = markerData.length - 1; i >= 0; i--) {
      var place = markerData[i];
      LatLngList.push(new google.maps.LatLng(place.latitude,place.longitude));
    };
    return LatLngList;
  };

  calculateMapZoomLevel = function(map) {
    var LatLngList = latLangList();

    //  Create a new viewpoint bound
    var bounds = new google.maps.LatLngBounds();
    //  Go through each...
    for (var i = 0, LtLgLen = LatLngList.length; i < LtLgLen; i++) {
    //  And increase the bounds to take this point
      bounds.extend (LatLngList[i]);
    }
    //  Fit these bounds to the map
    map.fitBounds (bounds);
  };

  addPlacesToMap = function(map) {
    for (var i = markerData.length - 1; i >= 0; i--) {
      var place = markerData[i];
      var placeLatLong = new google.maps.LatLng(place.latitude, place.longitude);
      var marker = addMarker(map, placeLatLong, place);
    };
  };
  google.maps.event.addDomListener(window, 'load', initialize);
</script>

<div id="map-canvas" style="width: 100%; height: 100%">
</div>
